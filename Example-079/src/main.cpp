/**************************************************************************************************
 * Examples in the C++ language (the 'Example-079' Test).
 *
 * GitHub repository: http://github.com/davidcanino/C_plus_plus_examples
 *
 * Created by David Canino (canino.david@gmail.com), June 2017
 *
 * main.cpp - the source file, implementing the main function for the 'Example-079' Test.
 **************************************************************************************************/
 
#include <iostream>
#include <cstdlib>
#include <random>
using namespace std;

/// The main function for the <i>'Example-079'</i> Test.
int main(void)
{
	/* This is the 'Example-079' Test, where a generic C++11 random device is validated. */
    cout<<endl<<"\tThis is the 'Example-079' Test in the C++ language."<<endl<<endl;
    cout.flush();
    
    /* TASK #1 - creating a random device 'r', and analyzing its properties. */ 
    cout<<"\tCreating a random device 'r' ... ";
    std::random_device r;
    cout<<"ok"<<endl<<endl;
    cout<<"\tThe minimum value, generated by the random device 'r', is "<<r.min()<<"."<<endl;
    cout<<"\tThe maximum value, generated by the random device 'r', is "<<r.max()<<"."<<endl;
    cout<<"\tThe entropy for the values, generated by the random device 'r', is "<<r.entropy()<<"."<<endl;
    if(r.entropy()==0) { cout<<"\tThis means that the current library implementation employs a random number engine, instead of a real-random number generator."<<endl<<endl; }
    else { cout<<"\tThis means that the current library implementation employs a real-random number generator, instead of a random number engine."<<endl<<endl; }
    cout.flush();
    
    /* TASK #2 - generating some random values by using the random device 'r'. */
    cout<<"\tGenerating the following random values by using the random device 'r':"<<endl<<endl;
    cout.flush();
 	for(unsigned int k=0;k<10;k++) 
 	{ 
 		if(k<9) cout<<"\t\t-) the random device 'r' generates the value "<<r()<<";"<<endl; 
 		else cout<<"\t\t-) the random device 'r' generates the value "<<r()<<"."<<endl;
 		cout.flush();
 	}
 	
 	/* All is ok! */
 	cout<<endl;
 	cout.flush();
	cout << "\tPress the RETURN key to finish ... ";
	cout.flush();
	cin.get();
	#ifndef _MSC_VER
		cout << endl;
		cout.flush();
	#endif
    return EXIT_SUCCESS;
}


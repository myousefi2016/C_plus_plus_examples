/**************************************************************************************************
 * Examples in the C++ language (the 'Example-079' unit test).
 *
 * GitHub repository: http://github.com/davidcanino/C_plus_plus_examples
 *
 * Created by David Canino (canino.david@gmail.com), March 2017
 *
 * main.cpp - the source file, implementing the main function for the 'Example-079' unit test.
 **************************************************************************************************/
 
#include <iostream>
#include <cstdlib>
#include <random>
using namespace std;

/// The main function for the <i>Example-079</i> unit test.
int main(void)
{
	/* This is the 'Example-079' unit test, where a generic C++11 random device is validated. */
    cout<<endl<<"\tThis is the 'Example-079' unit test in the C++ language."<<endl<<endl;
    cout<<"\tCreating a random device 'r' ... ";
    std::random_device r;
    cout<<"ok"<<endl<<endl;
    cout<<"\tThe minimum value, generated by the random device 'r', is "<<r.min()<<"."<<endl;
    cout<<"\tThe maximum value, generated by the random device 'r', is "<<r.max()<<"."<<endl;
    cout<<"\tThe entropy for the values, generated by the random device 'r', is "<<r.entropy();
    if(r.entropy()==0) { cout<<" [ the current library implementation employs a random number engine, instead of a real-random number generator ]."<<endl<<endl; }
    else { cout<<" [ the current library implementation employs a real-random number generator, instead of a random number engine ]."<<endl<<endl; }
 	for(unsigned int k=0;k<10;k++) { cout<<"\tThe random device 'r' generates the value "<<r()<<"."<<endl; }
 	cout<<endl;
 	cout.flush();
    return EXIT_SUCCESS;
}